@page "/manager/article/new"
@using Blazorise;
@using Lazcat.Blog.Models.Dtos.Articles
@using Lazcat.Blog.Web.Services.Articles
@using System.Text.Json
@layout ManagerLayout
@inject MessageService MessageService
@inject IArticleService ArticleService
@inject IJSRuntime JSRuntime

<Blazorise.Form>
    <Validations Mode="ValidationMode.Auto" Model="@createUpdateArticleInput">
        <Field Horizontal="true">
            <Validation>
                <FieldLabel For="title" ColumnSize="ColumnSize.Is1">
                    <p style="font-size: 16px;">標題:</p>
                </FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is8">
                    <TextEdit id="title" @bind-Text="@createUpdateArticleInput.Title">
                        <Feedback>
                            <ValidationError />
                        </Feedback>
                    </TextEdit>
                </FieldBody>
            </Validation>
            <FieldLabel For="category" ColumnSize="ColumnSize.Is1">
                <p style="font-size: 16px;">分類:</p>
            </FieldLabel>
            <FieldBody ColumnSize="ColumnSize.Is2">
                <CategoryDropdownList CategoryChoose="ChangeCategory" SelectCategory="@(createUpdateArticleInput.CategoryId == 0 ? -2 : createUpdateArticleInput.CategoryId)"></CategoryDropdownList>
            </FieldBody>
        </Field>
        <Field Horizontal="true">
            <Validation>
                <FieldLabel ColumnSize="ColumnSize.Is1">
                    <p style="font-size: 16px;">文章描述:</p>
                </FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is11">
                    <MemoEdit Style="resize: none" Rows="3" @bind-Text="@createUpdateArticleInput.Description">
                        <Feedback>
                            <ValidationError />
                        </Feedback>
                    </MemoEdit>
                </FieldBody>
            </Validation>
        </Field>
        <Field>
            <FieldLabel>
                <p style="font-size: 16px;">文章內容</p>
            </FieldLabel>
            <FieldBody>
                <MemoEdit Style="resize: none" Rows="25" id="PreventTabTextArea" @bind-Text="@createUpdateArticleInput.Content"></MemoEdit>
            </FieldBody>
        </Field>
        <Field>
            <Blazorise.Button Color="Color.Success" Type="Blazorise.ButtonType.Submit" Clicked="async () => await SaveArticle()" PreventDefaultOnSubmit="true">
                Save
            </Blazorise.Button>
        </Field>
    </Validations>
</Blazorise.Form>

@code {

    [Parameter]
    public CreateUpdateArticleInput createUpdateArticleInput { get; set; }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        await base.SetParametersAsync(parameters);
        createUpdateArticleInput ??= new();
        Console.WriteLine(JsonSerializer.Serialize(createUpdateArticleInput));
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("jsinteropFunc.preventTabEvent");
        }
    }

    private async Task SaveArticle()
    {
        var article = await ArticleService.CreateOrUpdateArticle(createUpdateArticleInput);
        if (article.Entity == null)
        {
            await MessageService.Error(article.Message);
            return;
        }
        createUpdateArticleInput.Id = article.Entity.Id;
        await MessageService.Success(article.Message);
    }

    private void ChangeCategory(int id)
    {
        createUpdateArticleInput.CategoryId = id;
    }
}